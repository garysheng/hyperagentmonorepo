# 2025-01-20

- Created initial monorepo structure with pnpm workspaces
- Set up Next.js app with shadcn-ui
- Created Supabase database schema with proper tables:
  - Modified goals to be a separate table with UUIDs instead of JSONB array
  - Added proper indexes and relationships
- Set up environment variables for Next.js app
- Configured LangSmith for observability
- Decided to use Perplexity API for both user research and classification instead of OpenAI
- Created initial classification pipeline using LangChain and Perplexity 

- Created database schema for opportunity actions and team collaboration:
  - Added fields to opportunities table: assigned_to, needs_discussion, relevance_override details, status_updated details
  - Created opportunity_comments table for team discussions with proper RLS policies
  - Added indexes for performance optimization

- Implemented opportunity actions system:
  - Created types for all possible actions (upgrade/downgrade relevance, assign goal/user, flag for discussion)
  - Built API endpoint for handling actions with proper authentication
  - Added hooks for managing opportunity actions and fetching comments
  - Created API endpoint for fetching goals filtered by celebrity_id

- Built UI components for opportunity management:
  - Added DMActions component with dropdown menu for all available actions
  - Created dialogs for relevance changes that require explanations
  - Implemented goal assignment dialog with goal descriptions
  - Added loading states and error handling throughout

- Added proper TypeScript types:
  - Updated database types to reflect new schema
  - Created action types for all possible operations
  - Added event types for form handling

- Built dashboard with real-time metrics and activity tracking:
  - Created Overview component with key metrics (total DMs, average relevance, needs discussion, status breakdown)
  - Added RecentActivity component showing latest DMs and team actions
  - Implemented TeamActivity component with member stats and action history
  - Added loading states and skeletons throughout dashboard
  - Used tabs to organize activity views
  - Fixed type issues with Supabase query responses

# 2025-01-21

- Integrated Twitter OAuth for DM management:
  - Set up Twitter Developer App with proper permissions
  - Added Twitter API credentials and environment variables
  - Created Twitter API client utilities with proper typing
  - Implemented OAuth 1.0a flow with temporary token storage
  - Added Supabase table for storing Twitter auth data with RLS
  - Created API routes for Twitter auth flow and callback handling